package eecs2030.lab3;

import static org.junit.Assert.*;

import org.junit.FixMethodOrder;
import org.junit.Rule;
import org.junit.runners.MethodSorters;
import org.junit.Test;
import org.junit.rules.Timeout;

import java.awt.Color;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class PenTest {
	
	@Rule
    public Timeout globalTimeout = Timeout.seconds(1);

	@Test
	public void test01_noArgCtor() {
		Pen p = new Pen();
		assertEquals("Pen() failed: pen has wrong color\n",
				Color.BLACK, p.getColor());
		assertTrue("Pen() failed: pen is not on\n",
				p.isOn());
	}

	@Test
	public void test02_copyCtor() {
		Pen p = new Pen();
		p.setColor(Color.BLUE);
		assertEquals("Pen(Pen other) failed: pen has wrong color\n",
				Color.BLUE, p.getColor());
		assertTrue("Pen(Pen other) failed: pen is not on\n",
				p.isOn());
	}
	
	@Test
	public void test03_copyCtor() {
		Pen p = new Pen();
		p.setColor(Color.RED);
		assertEquals("Pen(Pen other) failed: pen has wrong color\n",
				Color.RED, p.getColor());
		assertTrue("Pen(Pen other) failed: pen is not on\n",
				p.isOn());
	}
	
	@Test
	public void test04_copyCtor() {
		Pen p = new Pen();
		p.setColor(Color.GREEN);
		p.off();
		assertEquals("Pen(Pen other) failed: pen has wrong color\n",
				Color.GREEN, p.getColor());
		assertFalse("Pen(Pen other) failed: pen is not off\n",
				p.isOn());
	}

	@Test
	public void test05_ctor() {
		Pen p = new Pen(Color.BLUE);
		assertEquals("Pen(Pen other) failed: pen has wrong color\n",
				Color.BLUE, p.getColor());
		assertTrue("Pen(Pen other) failed: pen is not on\n",
				p.isOn());
	}

	@Test
	public void test06_ctor() {
		Pen p = new Pen(Color.RED);
		assertEquals("Pen(Pen other) failed: pen has wrong color\n",
				Color.RED, p.getColor());
		assertTrue("Pen(Pen other) failed: pen is not on\n",
				p.isOn());
	}
	
	@Test
	public void test07_ctor() {
		Pen p = new Pen(Color.WHITE);
		assertEquals("Pen(Pen other) failed: pen has wrong color\n",
				Color.WHITE, p.getColor());
		assertTrue("Pen(Pen other) failed: pen is not on\n",
				p.isOn());
	}
}
